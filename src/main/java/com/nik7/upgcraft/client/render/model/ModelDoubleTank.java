package com.nik7.upgcraft.client.render.model;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

@SideOnly(Side.CLIENT)
public class ModelDoubleTank extends ModelBase {
    //fields
    public ModelRenderer clA;
    public ModelRenderer clB;
    public ModelRenderer clC;
    public ModelRenderer clD;
    public ModelRenderer Shape2B;
    public ModelRenderer Shape4B;
    public ModelRenderer Shape1B;
    public ModelRenderer Shape3B;
    public ModelRenderer Shape4;
    public ModelRenderer Shape1;
    public ModelRenderer Shape2;
    public ModelRenderer Shape3;
    public ModelRenderer top;
    public ModelRenderer bottom;
    public ModelRenderer tD;
    public ModelRenderer tC;
    public ModelRenderer tA;
    public ModelRenderer tB;
    public ModelRenderer bA;
    public ModelRenderer bB;
    public ModelRenderer bC;
    public ModelRenderer bD;
    public ModelRenderer front;
    public ModelRenderer back;
    public ModelRenderer r;
    public ModelRenderer l;

    public ModelDoubleTank() {
        textureWidth = 64;
        textureHeight = 64;

        clA = new ModelRenderer(this, 56, 14);
        clA.addBox(0F, 0F, 0F, 2, 32, 2);
        clA.setRotationPoint(5.3F, -8F, 5.3F);
        clA.setTextureSize(64, 64);
        clA.mirror = true;
        setRotation(clA, 0F, 0F, 0F);
        clB = new ModelRenderer(this, 56, 14);
        clB.addBox(0F, 0F, 0F, 2, 32, 2);
        clB.setRotationPoint(-7.3F, -8F, 5.3F);
        clB.setTextureSize(64, 64);
        clB.mirror = true;
        setRotation(clB, 0F, 0F, 0F);
        clC = new ModelRenderer(this, 56, 14);
        clC.addBox(0F, 0F, 0F, 2, 32, 2);
        clC.setRotationPoint(-7.3F, -8F, -7.3F);
        clC.setTextureSize(64, 64);
        clC.mirror = true;
        setRotation(clC, 0F, 0F, 0F);
        clD = new ModelRenderer(this, 56, 14);
        clD.addBox(0F, 0F, 0F, 2, 32, 2);
        clD.setRotationPoint(5.3F, -8F, -7.3F);
        clD.setTextureSize(64, 64);
        clD.mirror = true;
        setRotation(clD, 0F, 0F, 0F);
        Shape2B = new ModelRenderer(this, 0, 46);
        Shape2B.addBox(0F, 0F, 0F, 1, 1, 1);
        Shape2B.setRotationPoint(6.3F, 23.3F, -7.3F);
        Shape2B.setTextureSize(64, 64);
        Shape2B.mirror = true;
        setRotation(Shape2B, 0F, 0F, 0F);
        Shape4B = new ModelRenderer(this, 0, 46);
        Shape4B.addBox(0F, 0F, 0F, 1, 1, 1);
        Shape4B.setRotationPoint(-7.3F, 23.3F, 6.3F);
        Shape4B.setTextureSize(64, 64);
        Shape4B.mirror = true;
        setRotation(Shape4B, 0F, 0F, 0F);
        Shape1B = new ModelRenderer(this, 0, 46);
        Shape1B.addBox(0F, 0F, 0F, 1, 1, 1);
        Shape1B.setRotationPoint(-7.3F, 23.3F, -7.3F);
        Shape1B.setTextureSize(64, 64);
        Shape1B.mirror = true;
        setRotation(Shape1B, 0F, 0F, 0F);
        Shape3B = new ModelRenderer(this, 0, 46);
        Shape3B.addBox(0F, 0F, 0F, 1, 1, 1);
        Shape3B.setRotationPoint(6.3F, 23.3F, 6.3F);
        Shape3B.setTextureSize(64, 64);
        Shape3B.mirror = true;
        setRotation(Shape3B, 0F, 0F, 0F);
        Shape4 = new ModelRenderer(this, 0, 46);
        Shape4.addBox(0F, 0F, 0F, 1, 1, 1);
        Shape4.setRotationPoint(-7.3F, -8.3F, 6.3F);
        Shape4.setTextureSize(64, 64);
        Shape4.mirror = true;
        setRotation(Shape4, 0F, 0F, 0F);
        Shape1 = new ModelRenderer(this, 0, 46);
        Shape1.addBox(0F, 0F, 0F, 1, 1, 1);
        Shape1.setRotationPoint(-7.3F, -8.3F, -7.3F);
        Shape1.setTextureSize(64, 64);
        Shape1.mirror = true;
        setRotation(Shape1, 0F, 0F, 0F);
        Shape2 = new ModelRenderer(this, 0, 46);
        Shape2.addBox(0F, 0F, 0F, 1, 1, 1);
        Shape2.setRotationPoint(6.3F, -8.3F, -7.3F);
        Shape2.setTextureSize(64, 64);
        Shape2.mirror = true;
        setRotation(Shape2, 0F, 0F, 0F);
        Shape3 = new ModelRenderer(this, 0, 46);
        Shape3.addBox(0F, 0F, 0F, 1, 1, 1);
        Shape3.setRotationPoint(6.3F, -8.3F, 6.3F);
        Shape3.setTextureSize(64, 64);
        Shape3.mirror = true;
        setRotation(Shape3, 0F, 0F, 0F);
        top = new ModelRenderer(this, 0, 0);
        top.addBox(0F, 0.1F, 0F, 14, 0, 14);
        top.setRotationPoint(-7F, -8F, -7F);
        top.setTextureSize(64, 64);
        top.mirror = true;
        setRotation(top, 0F, 0F, 0F);
        bottom = new ModelRenderer(this, 0, 0);
        bottom.addBox(0F, -0.8F, 0F, 14, 0, 14);
        bottom.setRotationPoint(-7F, 24F, -7F);
        bottom.setTextureSize(64, 64);
        bottom.mirror = true;
        setRotation(bottom, 0F, 0F, 0F);
        tD = new ModelRenderer(this, 0, 48);
        tD.addBox(0F, 0F, 0F, 2, 14, 2);
        tD.setRotationPoint(-7F, -6.3F, -5.3F);
        tD.setTextureSize(64, 64);
        tD.mirror = true;
        setRotation(tD, 1.570796F, 1.570796F, 0F);
        tC = new ModelRenderer(this, 0, 48);
        tC.addBox(0F, 0F, 0F, 2, 14, 2);
        tC.setRotationPoint(-7F, -6.3F, 7.3F);
        tC.setTextureSize(64, 64);
        tC.mirror = true;
        setRotation(tC, 1.570796F, 1.570796F, 0F);
        tA = new ModelRenderer(this, 0, 48);
        tA.addBox(0F, 0F, 0F, 2, 14, 2);
        tA.setRotationPoint(-7.3F, -6.3F, -7F);
        tA.setTextureSize(64, 64);
        tA.mirror = true;
        setRotation(tA, 1.570796F, 0F, 0F);
        tB = new ModelRenderer(this, 0, 48);
        tB.addBox(0F, 0F, 0F, 2, 14, 2);
        tB.setRotationPoint(5.3F, -6.3F, -7F);
        tB.setTextureSize(64, 64);
        tB.mirror = true;
        setRotation(tB, 1.570796F, 0F, 0F);
        bA = new ModelRenderer(this, 0, 48);
        bA.addBox(0F, 0F, 0F, 2, 14, 2);
        bA.setRotationPoint(-7.3F, 24.3F, -7F);
        bA.setTextureSize(64, 64);
        bA.mirror = true;
        setRotation(bA, 1.570796F, 0F, 0F);
        bB = new ModelRenderer(this, 0, 48);
        bB.addBox(0F, 0F, 0F, 2, 14, 2);
        bB.setRotationPoint(5.3F, 24.3F, -7F);
        bB.setTextureSize(64, 64);
        bB.mirror = true;
        setRotation(bB, 1.570796F, 0F, 0F);
        bC = new ModelRenderer(this, 0, 48);
        bC.addBox(0F, 0F, 0F, 2, 14, 2);
        bC.setRotationPoint(-7F, 24.3F, 7.3F);
        bC.setTextureSize(64, 64);
        bC.mirror = true;
        setRotation(bC, 1.570796F, 1.570796F, 0F);
        bD = new ModelRenderer(this, 0, 48);
        bD.addBox(0F, 0F, 0F, 2, 14, 2);
        bD.setRotationPoint(-7F, 24.3F, -5.3F);
        bD.setTextureSize(64, 64);
        bD.mirror = true;
        setRotation(bD, 1.570796F, 1.570796F, 0F);
        front = new ModelRenderer(this, 14, 14);
        front.addBox(0F, 0F, 0F, 14, 32, 0);
        front.setRotationPoint(-7F, -8F, -7F);
        front.setTextureSize(64, 64);
        front.mirror = true;
        setRotation(front, 0F, 0F, 0F);
        back = new ModelRenderer(this, 14, 14);
        back.addBox(0F, 0F, 0F, 14, 32, 0);
        back.setRotationPoint(-7F, -8F, 7F);
        back.setTextureSize(64, 64);
        back.mirror = true;
        setRotation(back, 0F, 0F, 0F);
        r = new ModelRenderer(this, 14, 0);
        r.addBox(0F, 0F, 0F, 0, 31, 14);
        r.setRotationPoint(-7F, -8F, -7F);
        r.setTextureSize(64, 64);
        r.mirror = true;
        setRotation(r, 0F, 0F, 0F);
        l = new ModelRenderer(this, 14, 0);
        l.addBox(0F, 0F, 0F, 0, 31, 14);
        l.setRotationPoint(7F, -8F, -7F);
        l.setTextureSize(64, 64);
        l.mirror = true;
        setRotation(l, 0F, 0F, 0F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        clA.render(f5);
        clB.render(f5);
        clC.render(f5);
        clD.render(f5);
        Shape2B.render(f5);
        Shape4B.render(f5);
        Shape1B.render(f5);
        Shape3B.render(f5);
        Shape4.render(f5);
        Shape1.render(f5);
        Shape2.render(f5);
        Shape3.render(f5);
        top.render(f5);
        bottom.render(f5);
        tD.render(f5);
        tC.render(f5);
        tA.render(f5);
        tB.render(f5);
        bA.render(f5);
        bB.render(f5);
        bC.render(f5);
        bD.render(f5);
        front.render(f5);
        back.render(f5);
        r.render(f5);
        l.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
        super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    }

}
